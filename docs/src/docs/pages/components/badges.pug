---
title: Badges
---

p.-text Badges are inline elements used to label, categorize, or organize a list of items.

h3 Examples
p.-text
  | To display a badge, use the class <code>a-badge</code>.
  | A contextual class (e.g. <code>-danger</code>) can also be applied to provide alternate styling.

h4 Base
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge">
      <span>Base</span>
    </div>
    <div class="a-badge -brand">
      <span>Brand</span>
    </div>
    <div class="a-badge -success">
      <span>Success</span>
    </div>
    <div class="a-badge -danger">
      <span>Danger</span>
    </div>
    <div class="a-badge -info">
      <span>Info</span>
    </div>
    <div class="a-badge -dark">
      <span>Dark</span>
    </div>
    <div class="a-badge -light">
      <span>Light</span>
    </div>
h4 Outline
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -outline -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -outline">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -outline">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -outline">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -outline">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -outline">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -outline">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -outline">
      <span>Light</span>
    </div>
h4 Flat
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -flat -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -outline">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -flat">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -flat">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -flat">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -flat">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -flat">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -flat">
      <span>Light</span>
    </div>

h3 Pills
p.-text Use the <code>-pill</code> modifier class to render badges with a more pronounced border-radius.
h4 Base
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -pill -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -pill">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -pill">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -pill">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -pill">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -pill">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -pill">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -pill">
      <span>Light</span>
    </div>
h4 Outline
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -pill -outline -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -pill">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -pill -outline">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -pill -outline">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -pill -outline">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -pill -outline">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -pill -outline">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -pill -outline">
      <span>Light</span>
    </div>
h3 Additional Sizes
h4 Small
p.-text Use the <code>-small</code> modifier class to render small badges.
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -small -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -small">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -small">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -small">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -small">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -small">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -small">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -small">
      <span>Light</span>
    </div>
h4 Smaller
p.-text Use the <code>-smaller</code> modifier class to render even smaller badges.
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -smaller -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge -smaller">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -smaller">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -smaller">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -smaller">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -smaller">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -smaller">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -smaller">
      <span>Light</span>
    </div>
h3 Text Transform
h4 Uppercase
p.-text Use the <code>-textUppercase</code> text utility class to render badges in all uppercase. <code>-textLowercase</code> and <code>-textCapitalized</code> are also supported.
.example.-mb3
  .-p2
    each type, val in {Base:'base', Brand:'brand', Success:'success', Danger:'danger', Info:'info', Dark:'dark', Light:'light'}
      .a-badge(class=`-${type} -textUppercase -m1`)
        span= val
  :code(lang="html")
    <div class="a-badge">
      <span>Base</span>
    </div>
    <div class="a-badge -brand -textUppercase">
      <span>Brand</span>
    </div>
    <div class="a-badge -success -textUppercase">
      <span>Success</span>
    </div>
    <div class="a-badge -danger -textUppercase">
      <span>Danger</span>
    </div>
    <div class="a-badge -info -textUppercase">
      <span>Info</span>
    </div>
    <div class="a-badge -dark -textUppercase">
      <span>Dark</span>
    </div>
    <div class="a-badge -light -textUppercase">
      <span>Light</span>
    </div>
