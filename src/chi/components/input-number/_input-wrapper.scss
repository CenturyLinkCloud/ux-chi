@import '../../_variables';

$sizes: (
  sm: (
    height: 0.5rem,
    padding-right: 1.25rem,
    right: 0.1875rem,
    width: 1rem,
    top: 0.1875rem,
    bottom: 0.1875rem,
    background-size: 0.375rem,
    icon-height: 0.375rem,
    icon-width: 0.875rem
  ),
  small: (
    height: 0.5rem,
    padding-right: 1.25rem,
    right: 0.1875rem,
    width: 1rem,
    top: 0.1875rem,
    bottom: 0.1875rem,
    background-size: 0.375rem,
    icon-height: 0.375rem,
    icon-width: 0.875rem
  ),
  md: (
    height: 0.6875rem,
    padding-right: 1.375rem,
    right: 0.25rem,
    width: 1rem,
    top: 0.25rem,
    bottom: 0.25rem,
    background-size: 0.5rem,
    icon-height: 0.5rem,
    icon-width: 0.875rem
  ),
  lg: (
    height: 0.875rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.25rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.5rem,
    icon-height: 0.5rem,
    icon-width: 1.125rem
  ),
  large: (
    height: 0.875rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.25rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.5rem,
    icon-height: 0.5rem,
    icon-width: 1.125rem
  ),
  xl: (
    height: 1rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.5rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.625rem,
    icon-height: 0.625rem,
    icon-width: 1.375rem
  )
);

$m-inputnumber: (
  sm: (
    width: 6rem,
    button-height: 1.5rem,
    padding: 0.3125rem,
    icon-height: 0.75rem,
    icon-width: 0.75rem,
    input-padding: 0.1875rem 0.4375rem
  ),
  md: (
    width: 8rem,
    button-height: 2rem,
    padding: 0.4375rem,
    icon-height: 1rem,
    icon-width: 1rem,
    input-padding: 0.4375rem
  ),
  lg: (
    width: 10rem,
    button-height: 2.5rem,
    padding: 0.6875rem,
    icon-height: 1rem,
    icon-width: 1rem,
    input-padding: .5625rem .4375rem
  ),
  xl: (
    width: 12rem,
    button-height: 3rem,
    padding: 0.9375rem,
    icon-height: 1rem,
    icon-width: 1rem,
    input-padding: .6875rem .4375rem
  )
);

.m-input-number {
  position: relative;

  input {
    &[type='number'] {
      &.a-input {
        padding-right: 1.375rem;

        & ~ button {
          &.a-btn {
            height: 0.6875rem;
            padding: 0;
            position: absolute;
            right: 0.25rem;
            width: 1rem;

            &:first-of-type {
              bottom: 0.25rem;
            }

            &:last-of-type {
              top: 0.25rem;
            }

            & .a-icon {
              height: 0.5rem;
              width: 0.875rem;
            }
          }
        }

        &[disabled] {
          & ~ button {
            opacity: 0.65;
            pointer-events: none;
          }
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            padding-right: map-get(map-get($sizes, $type), padding-right);

            & ~ button {
              &.a-btn {
                height: map-get(map-get($sizes, $type), height);
                right: map-get(map-get($sizes, $type), right);
                width: map-get(map-get($sizes, $type), width);

                &:first-of-type {
                  bottom: map-get(map-get($sizes, $type), bottom);
                }

                &:last-of-type {
                  top: map-get(map-get($sizes, $type), top);
                }

                & .a-icon {
                  height: map-get(map-get($sizes, $type), icon-height);
                  width: map-get(map-get($sizes, $type), icon-width);
                }
              }
            }
          }
        }
      }
    }
  }

  &.-expanded {
    align-items: center;
    display: flex;
    width: 8rem;

    & > input {
      &[type='number'] {
        &.a-input {
          border-radius: 0;
          flex: auto;
          min-width: 1rem;
          order: 2;
          padding: .4375rem;
          text-align: center;
          z-index: 1;

          & ~ button {
            &.a-btn {
              color: $text-color;
              display: block;
              height: map-get(map-get($m-inputNumber, md), button-height);
              padding: .4375rem;
              position: relative;

              &:first-of-type,
              &:focus:first-of-type {
                border-bottom-right-radius: 0;
                border-right-width: 0;
                border-top-right-radius: 0;
                bottom: 0;
                order: 1;
                right: 0;
                width: auto;
              }

              &:last-of-type,
              &:focus:last-of-type {
                border-bottom-left-radius: 0;
                border-left-width: 0;
                border-top-left-radius: 0;
                order: 3;
                right: 0;
                top: 0;
                width: auto;
              }

              & .a-icon {
                height: 1rem;
                width: 1rem;
              }
            }
          }
        }

        &[disabled] {
          &.a-input {
            & ~ button {
              color: rgba($text-color, 0.3);
              opacity: 1;
              pointer-events: none;
            }
          }
        }
      }
    }

    & > button[disabled] {
      color: rgba($text-color, 0.3);
      pointer-events: none;
    }

    @each $size, $values in $m-inputNumber {
      &.-#{$size} {
        width: map-get($values, width);

        & > input[type='number'].a-input {
          padding: map-get($values, input-padding);

          & ~ button {
            height: map-get($values, button-height);
            padding: map-get($values, padding);

            &:first-of-type {
              bottom: 0;
            }

            &:last-of-type {
              top: 0;
            }

            & .a-icon {
              height: map-get($values, icon-height);
              width: map-get($values, icon-width);
            }
          }
        }
      }
    }
  }
}

// Legacy code start
.a-inputWrapper,
.m-input__wrapper {
  input {
    &[type='number'] {
      &.a-input {
        padding-right: 1.375rem;

        & ~ button {
          background-color: set-color(white);
          background-position: center;
          background-repeat: no-repeat;
          background-size: 0.5rem;
          border: 0.0625rem solid set-color(grey, 30);
          cursor: pointer;
          height: 0.6875rem;
          outline: none;
          padding: 0;
          position: absolute;
          right: 0.25rem;
          width: 1rem;

          &:first-of-type {
            background-image: url('icon-triangle-down.svg');
            bottom: 0.25rem;
          }

          &:last-of-type {
            background-image: url('icon-triangle-up.svg');
            top: 0.25rem;
          }

          &:active {
            background-color: set-color(grey, 20);
            border: 0.0625rem solid set-color(grey, 40);
            box-shadow: inset 0 0 1px 0 rgba(set-color(black), 0.2);
          }
        }

        &[disabled] {
          & ~ button {
            opacity: 0.65;
            pointer-events: none;
          }
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            padding-right: map-get(map-get($sizes, $type), padding-right);

            & ~ button {
              background-size: map-get(map-get($sizes, $type), background-size);
              height: map-get(map-get($sizes, $type), height);
              right: map-get(map-get($sizes, $type), right);
              width: map-get(map-get($sizes, $type), width);

              &:first-of-type {
                bottom: map-get(map-get($sizes, $type), bottom);
              }

              &:last-of-type {
                top: map-get(map-get($sizes, $type), top);
              }
            }
          }
        }
      }
    }
  }
}

.m-inputNumber {
  align-items: center;
  display: flex;
  width: 8rem;

  @each $size, $values in $m-inputnumber {
    &.-#{$size} {
      width: map-get($values, width);

      & > button {
        height: map-get($values, button-height);
      }
    }
  }

  & > input {
    &[type='number'] {
      &.a-input {
        flex: auto;
        min-width: 1rem;
        order: 2;
        text-align: center;
        z-index: 0;
      }

      &[disabled] {
        &.a-input ~ button {
          color: rgba($text-color, 0.3);
          pointer-events: none;
        }
      }
    }
  }

  & > button {
    color: $text-color;
    display: block;
    height: map-get(map-get($m-inputnumber, md), button-height);

    &[disabled] {
      color: rgba($text-color, 0.3);
      pointer-events: none;
    }

    &:first-of-type,
    &:focus:first-of-type {
      border-right-width: 0;
      order: 1;
    }

    &:last-of-type,
    &:focus:last-of-type {
      border-left-width: 0;
      order: 3;
    }
  }
}
// Legacy code end

// sass-lint:disable-all
_:-ms-lang(x), .m-inputNumber button .a-btn__content, .m-inputNumber button .a-icon {
  display: block;
}
// sass-lint:enable-all
