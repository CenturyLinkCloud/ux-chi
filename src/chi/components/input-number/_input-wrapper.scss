@import '../../variables';

$sizes: (
  sm: (
    height: 0.5rem,
    padding-right: 1.25rem,
    right: 0.1875rem,
    width: 1rem,
    top: 0.1875rem,
    bottom: 0.1875rem,
    background-size: 0.375rem
  ),
  small: (
    height: 0.5rem,
    padding-right: 1.25rem,
    right: 0.1875rem,
    width: 1rem,
    top: 0.1875rem,
    bottom: 0.1875rem,
    background-size: 0.375rem
  ),
  md: (
    height: 0.6875rem,
    padding-right: 0rem,
    right: 0.25rem,
    width: 1rem,
    top: 0.25rem,
    bottom: 0.25rem,
    background-size: 0.5rem
  ),
  lg: (
    height: 0.875rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.25rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.5rem
  ),
  large: (
    height: 0.875rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.25rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.5rem
  ),
  xl: (
    height: 1rem,
    padding-right: 1.8125rem,
    right: 0.3125rem,
    width: 1.5rem,
    top: 0.3125rem,
    bottom: 0.3125rem,
    background-size: 0.625rem
  )
);

$m-inputNumber: (
  sm: (
    width: 6rem,
    button-height: 1.5rem
  ),
  md: (
    width: 8rem,
    button-height: 2rem
  ),
  lg: (
    width: 10rem,
    button-height: 2.5rem
  ),
  xl: (
    width: 12rem,
    button-height: 3rem
  )
);

.a-inputWrapper {
  input {
    &[type='number'] {
      &.a-input {
        padding-right: 1.375rem;

        & ~ button {
          background-color: set-color(white);
          background-position: center;
          background-repeat: no-repeat;
          background-size: 0.5rem;
          border: 0.0625rem solid set-color(grey, 30);
          border-radius: $border-radius;
          cursor: pointer;
          height: 0.6875rem;
          outline: none;
          padding: 0;
          position: absolute;
          right: 0.25rem;
          width: 1rem;

          &:first-of-type {
            background-image: url(icon-triangle-down.svg);
            bottom: 0.25rem;
          }

          &:last-of-type {
            background-image: url(icon-triangle-up.svg);
            top: 0.25rem;
          }

          &:active {
            background-color: set-color(grey, 20);
            border: 0.0625rem solid set-color(grey, 40);
            box-shadow: inset 0 0 1px 0 rgba(set-color(black), 0.2);
          }
        }

        &[disabled] {
          & ~ button {
            opacity: 0.65;
            pointer-events: none;
          }
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            padding-right: map-get(map-get($sizes, $type), padding-right);

            & ~ button {
              height: map-get(map-get($sizes, $type), height);
              right: map-get(map-get($sizes, $type), right);
              width: map-get(map-get($sizes, $type), width);
              background-size: map-get(map-get($sizes, $type), background-size);

              &:first-of-type {
                bottom: map-get(map-get($sizes, $type), bottom);
              }

              &:last-of-type {
                top: map-get(map-get($sizes, $type), top);
              }
            }
          }
        }
      }
    }
  }
}

.m-inputNumber {
  align-items: center;
  display: flex;
  width: 8rem;

  @each $size, $values in $m-inputNumber {
    &.-#{$size} {
      width: map-get($values, width);
      & > button {
        height: map-get($values, button-height);
      }
    }
  }

  & > input[type='number'].a-input {
    border-radius: 0;
    flex: auto;
    min-width: 1rem;
    order: 2;
    text-align: center;
    z-index: 0;
  }

  & > input[type='number'][disabled].a-input ~ button {
    color: rgba($text-color, 0.3);
    pointer-events: none;
  }

  & > button[disabled] {
    color: rgba($text-color, 0.3);
    pointer-events: none;
  }

  & > button {
    color: $text-color;
    display: block;
    height: map-get(map-get($m-inputNumber, md), button-height);

    &:first-of-type, &:focus:first-of-type {
      border-right-width: 0;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      order: 1;
    }

    &:last-of-type, &:focus:last-of-type {
      border-left-width: 0;
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
      order: 3;
    }
  }

  &.-pill > button {

    &:first-of-type {
      border-radius: 50% 0 0 50%;
    }

    &:last-of-type {
      border-radius: 0 50% 50% 0;
    }
  }
}

// sass-lint:disable-all
_:-ms-lang(x), .m-inputNumber button .a-btn__content, .m-inputNumber button .a-icon {
  display: block;
}
// sass-lint:enable-all
