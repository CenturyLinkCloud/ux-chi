@import '_global-variables';
@import '_global-mixins';

$avatar-sizes: (
  xs: 0.75rem,
  sm: 1rem,
  sm--2: 1.25rem,
  sm--3: 1.5rem,
  md: 2rem,
  lg: 4rem,
  xl: 6rem,
  xxl: 8rem
);

$avatar-colors: (
  grey: (
    border-color: $color-grey-60,
    text-color:   $color-grey-70,
  ),
  red: (
    border-color: $color-red-60,
    text-color:   $color-red-70,
  ),
  pink: (
    border-color: $color-pink-60,
    text-color:   $color-pink-70,
  ),
  purple: (
    border-color: $color-purple-60,
    text-color:   $color-purple-70,
  ),
  indigo: (
    border-color: $color-indigo-60,
    text-color:   $color-indigo-70,
  ),
  cyan: (
    border-color: $color-cyan-60,
    text-color:   $color-cyan-70,
  ),
  navy: (
    border-color: $color-navy-60,
    text-color:   $color-navy-70,
  ),
  blue: (
    border-color: $color-blue-60,
    text-color:   $color-blue-70,
  ),
  teal: (
    border-color: $color-teal-60,
    text-color:   $color-teal-70,
  ),
  green: (
    border-color: $color-green-60,
    text-color:   $color-green-70,
  ),
  yellow: (
    border-color: $color-yellow-60,
    text-color:   $color-yellow-70,
  ),
  orange: (
    border-color: $color-orange-60,
    text-color:   $color-orange-70,
  ),
  light: (
    border-color: $color-border-white,
    text-color:   $color-text-white,
  ),
  inverse: (
    border-color: $color-border-white,
    text-color:   $color-text-white,
  ),
  primary: (
    border-color: $color-border-primary,
    text-color:   $color-text-primary,
  ),
  secondary: (
    border-color: $color-border-secondary,
    text-color:   $color-text-secondary,
  ),
);

$avatar-default-size: 'md';

.chi-avatar {
  background-color: $color-grey-20;
  border-radius: 50%;
  color: $color-text-base;
  display: inline-block;
  font-size: map-get($avatar-sizes, $avatar-default-size) / 2;
  height: map-get($avatar-sizes, $avatar-default-size);
  line-height: map-get($avatar-sizes, $avatar-default-size);
  overflow: hidden;
  position: relative;
  text-align: center;
  vertical-align: middle;
  width: map-get($avatar-sizes, $avatar-default-size);

  & > img,
  & > svg {
    height: 100%;
    width: 100%;
  }

  & > i,
  &.chi-icon > svg {
    height: 50%;
    margin: 25%;
    width: 50%;
  }

  &.chi-icon {
    font-size: map-get($avatar-sizes, $avatar-default-size) / 2;
    height: map-get($avatar-sizes, $avatar-default-size);
    line-height: map-get($avatar-sizes, $avatar-default-size);
    width: map-get($avatar-sizes, $avatar-default-size);
  }

  @each $type in map-keys($avatar-sizes) {
    &.-#{$type} {
      font-size: map-get($avatar-sizes, $type) / 2;
      height: map-get($avatar-sizes, $type);
      line-height: map-get($avatar-sizes, $type);
      width: map-get($avatar-sizes, $type);

      & > i {
        &.chi-icon {
          font-size: map-get($avatar-sizes, $type) / 2;
        }
      }
    }
  }

  @each $color in map-keys($avatar-colors) {
    &.-#{$color} {

      @if($color == 'light' or 'inverse') {
        background-color: transparent;
      } @else {
        background-color: white;
      }

      border: max(0.0625rem, map-get($avatar-sizes,
          $avatar-default-size) / 48) solid map-get($avatar-colors, border-color);
      color: map-get(map-get($avatar-colors, $color), text-color);

      &.-transparent {
        background-color: transparent;
      }
    }

    @each $type in map-keys($avatar-sizes) {
      &.-#{$type} {
        border-width: max(0.0625rem, map-get($avatar-sizes, $type) / 48);
      }
    }
  }
}

.chi-avatar-group {
  align-items: center;
  display: flex;

  .chi-avatar {
    margin-right: 0.75rem;
  }
}
