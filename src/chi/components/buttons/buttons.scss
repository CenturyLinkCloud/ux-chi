@import '_global-mixins';
@import '_global-variables';

$button-colors: (
  primary: (
    background-color: $color-background-primary,
    background-color-hover: $color-blue-80,
    background-color-active: $color-blue-90,
    border-color: $color-border-primary,
    border-color-hover: $color-cyan-50,
    border-color-active: $color-blue-80,
    text-color: $color-text-white,
    text-color-outline: $color-text-primary,
    text-color-outline-hover: $color-blue-70,
    text-color-outline-active: $color-navy-100,
  ),
  secondary: (
    background-color: $color-background-secondary,
    background-color-hover: $color-cyan-50,
    background-color-active: $color-cyan-60,
    border-color: $color-border-secondary,
    border-color-hover: $color-cyan-50,
    border-color-active: $color-cyan-60,
    text-color: $color-text-base,
    text-color-outline: $color-text-secondary,
    text-color-outline-hover: $color-cyan-50,
    text-color-outline-active: $color-cyan-60,
  ),
  dark: (
    background-color: $color-background-dark,
    background-color-hover: $color-background-black,
    background-color-active: $color-background-black,
    border-color: $color-border-dark,
    border-color-hover: $color-border-black,
    border-color-active: $color-border-black,
    text-color: $color-text-white,
    text-color-outline: $color-text-base,
    text-color-outline-hover: $color-text-black,
    text-color-outline-active: $color-text-black,
  ),
  danger: (
    background-color: $color-background-danger,
    background-color-hover: $color-red-80,
    background-color-active: $color-red-90,
    border-color: $color-border-danger,
    border-color-hover: $color-red-70,
    border-color-active: $color-red-80,
    text-color: $color-text-white,
    text-color-outline: $color-text-danger,
    text-color-outline-hover: $color-red-80,
    text-color-outline-active: $color-red-90,
  ),
  light: (
    background-color: $color-background-white,
    background-color-hover: $color-grey-20,
    background-color-active: $color-grey-30,
    border-color: $color-border-white,
    border-color-hover: $color-border-base-dark,
    border-color-active: $color-grey-40,
    text-color: $color-text-base,
    text-color-outline: $color-text-white,
    text-color-outline-hover: $color-grey-25,
    text-color-outline-active: $color-grey-40,
  )
);

$border: 0.0625rem;

$sizes: (
  sm: (
    font-size: 0.75rem,
    line-height: 1rem,
    padding: (0.25rem - $border) (0.5rem - $border),
      icons: (
        height: 0.75rem,
        padding: 0.375rem - $border,
        width: 0.75rem,
        line-height: 0.75rem,
        font-size: 0.75rem,
      )
  ),
  md: (
    font-size: 0.875rem,
    line-height: 1rem,
    padding: (0.5rem - $border) (1rem - $border),
      icons: (
        height: 1rem,
        padding: 0.5rem - $border,
        width: 1rem,
        line-height: 1rem,
        font-size: 1rem,
      )
  ),
  lg: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    padding: (0.625rem - $border) (1.5rem - $border),
      icons: (
        height: 1rem,
        padding: 0.75rem - $border,
        width: 1rem,
        line-height: 1rem,
        font-size: 1rem,
      )
  ),
  xl: (
    font-size: 0.875rem,
    line-height: 1.25rem,
    padding: (0.875rem - $border) (1.5rem - $border),
      icons: (
        height: 1rem,
        padding: 1rem - $border,
        width: 1rem,
        line-height: 1rem,
        font-size: 1rem,
      )
  )
);

.chi-button {
  & {
    align-items: center;
    background-color: $color-background-white;
    border: $border solid $color-border-base-dark;
    border-radius: $border-radius;
    box-shadow: 0 1px 1px 0 rgba($color-black, 0.04);
    color: $color-text-base;
    cursor: pointer;
    display: inline-flex;
    font-size: $font-size-base;
    font-weight: $font-weight-semi-bold;
    line-height: $line-height-sm;
    padding: (0.5rem - $border) (1rem - $border);
    text-align: center;
    transition: background-color 0.12s ease-in, border-color 0.1s ease-in, color 0.12s ease-in;
    vertical-align: middle;
    white-space: nowrap;

    &[disabled],
    &.-disabled {
      @include button-disabled;
    }

    .chi-icon,
    .chi-spinner {
      color: $color-icon-base;
      height: 1rem;
      width: 1rem;
    }

    &__content {
      align-items: center;
      display: inline-flex;
      justify-content: center;

      & > :not(:last-child) {
        margin-right: 0.5rem;
      }
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        font-size: map-get(map-get($sizes, $type), font-size);
        line-height: map-get(map-get($sizes, $type), line-height);
        padding: map-get(map-get($sizes, $type), padding);

        .chi-icon {
          height: map-get(map-get(map-get($sizes, $type), icons), height);
          width: map-get(map-get(map-get($sizes, $type), icons), width);

          &[class^='icon-'],
          &[class*=' icon-'] {
            font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
            line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
          }
        }

        .chi-spinner {
          height: map-get(map-get(map-get($sizes, $type), icons), height);
          width: map-get(map-get(map-get($sizes, $type), icons), width);
        }

        &.-icon {
          padding: map-get(map-get(map-get($sizes, $type), icons), padding);
        }
      }
    }

    &:hover,
    &.-hover {
      background-color: $color-grey-20;
      border: $border solid $color-border-base-dark;
      text-decoration: none;
    }

    &:focus,
    &.-focus {
      border: $border solid $color-border-base-dark;
      outline: 0.125rem solid $focus-color;
      outline-offset: 0.0625rem;
      z-index: $zindex-prominent;
    }

    &:active,
    &.-active {
      background-color: $color-grey-25;
      border: $border solid rgba($color-grey-70, 0.2);
      outline: none;
    }

    &.-icon {
      padding: (0.5rem - $border);
    }

    &.-float {
      border-color: $color-grey-40;
      border-radius: 50%;
      box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.24),
      0 6px 10px 0 rgba(0, 0, 0, 0.14),
      0 1px 16px 0 rgba(0, 0, 0, 0.12);
      padding: 0.6875rem;
      transition: box-shadow 0.15s ease-in, background-color 0.15s ease-in;

      &:active,
      &.-active {
        box-shadow: 0 4px 4px -2px rgba(0, 0, 0, 0.2),
        0 8px 10px 1px rgba(0, 0, 0, 0.14),
        0 2px 14px 1px rgba(0, 0, 0, 0.12);
      }

      .chi-icon {
        height: 1rem;
        width: 1rem;
      }

      &[disabled],
      &.-disabled {
        @include button-disabled;
      }
    }

    &.-fluid:not(.-float) {
      width: 100%;
    }

    &.-uppercase {
      text-transform: uppercase;
    }

    &.-close {
      color: $color-text-base;

      &,
      &:hover,
      &.-hover,
      &:active,
      &.-active {
        background-color: transparent;
        border-color: transparent;
        box-shadow: none;
      }
    }

    &.-outline {
      background-color: transparent;
      border: $border solid $color-border-base-dark;

      &:hover,
      &.-hover {
        background-color: transparent;
        border-color: $color-grey-40;
      }

      &:active,
      &.-active {
        border-color: $color-grey-50;
      }


      &[disabled],
      &.-disabled {
        background-color: $color-background-base-dark;
        border-color: $color-border-base-dark;
        box-shadow: none;
        color: $color-text-muted-light;
        opacity: $opacity-100;
        pointer-events: none;

        & .chi-icon {
          color: $color-icon-muted;
          opacity: $opacity-100;
        }
      }

      &.-bg--white {
        &[disabled],
        &.-disabled {
          background-color: $color-background-base-dark !important;
        }
      }
    }

    &.-flat {
      background-color: transparent;
      border: $border solid transparent;
      box-shadow: none;

      @each $type in map-keys($sizes) {
        &.-#{$type} {
          font-size: map-get(map-get($sizes, $type), font-size);
          line-height: map-get(map-get($sizes, $type), line-height);

          .chi-icon {
            height: map-get(map-get(map-get($sizes, $type), icons), height);
            width: map-get(map-get(map-get($sizes, $type), icons), width);

            &[class^='icon-'],
            &[class*=' icon-'] {
              font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
              line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
            }
          }

          .chi-spinner {
            height: map-get(map-get(map-get($sizes, $type), icons), height);
            width: map-get(map-get(map-get($sizes, $type), icons), width);
          }
        }
      }

      &:hover,
      &.-hover {
        background-color: rgba($color-grey-70, 0.1);
        border: $border solid transparent;
        box-shadow: none;

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            font-size: map-get(map-get($sizes, $type), font-size);
            line-height: map-get(map-get($sizes, $type), line-height);

            .chi-icon {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);

              &[class^='icon-'],
              &[class*=' icon-'] {
                font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
                line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
              }
            }

            .chi-spinner {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);
            }
          }
        }
      }

      &:active,
      &.-active {
        background-color: rgba($color-grey-70, 0.2);
        border: $border solid transparent;

        &.-icon {
          padding: (0.5rem - $border);
        }

        @each $type in map-keys($sizes) {
          &.-#{$type} {
            font-size: map-get(map-get($sizes, $type), font-size);
            line-height: map-get(map-get($sizes, $type), line-height);

            .chi-icon {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);

              &[class^='icon-'],
              &[class*=' icon-'] {
                font-size: map-get(map-get(map-get($sizes, $type), icons), font-size);
                line-height: map-get(map-get(map-get($sizes, $type), icons), line-height);
              }
            }

            .chi-spinner {
              height: map-get(map-get(map-get($sizes, $type), icons), height);
              width: map-get(map-get(map-get($sizes, $type), icons), width);
            }

            &.-icon {
              padding: map-get(map-get(map-get($sizes, $type), icons), padding);
            }
          }
        }
      }

      &[disabled],
      &.-disabled {
        background-color: transparent;
        border-color: transparent;
        opacity: $opacity-60;

        & .chi-icon {
          opacity: $opacity-60;
        }
      }

      &.-no-hover {
        &:hover,
        &.-hover,
        &:active,
        &.-active {
          background-color: transparent;
          border-color: transparent;
          box-shadow: none;
        }
      }
    }
  }

  @each $color in map-keys($button-colors) {
    &.-#{$color} {
      background-color: map-get(map-get($button-colors, $color), background-color);
      border: $border solid transparent;
      box-shadow: 0 1px 1px 0 rgba($color-black, 0.04);
      color: map-get(map-get($button-colors, $color), text-color);

      .chi-icon {
        color: inherit;
      }

      .chi-spinner__icon {
        .path {
          stroke: map-get(map-get($button-colors, $color), text-color);
        }
      }

      &:hover,
      &.-hover {
        background-color: map-get(map-get($button-colors, $color), background-color-hover);
        border: $border solid transparent;
        box-shadow: 0 1px 4px 0 rgba($color-black, 0.15);
      }

      &:active,
      &.-active {
        background-color: map-get(map-get($button-colors, $color), background-color-active);
        border: $border solid transparent;
        box-shadow: none;
      }

      &[disabled],
      &.-disabled {
        @include button-disabled;
      }

      &.-outline {
        background-color: transparent;
        border: $border solid map-get(map-get($button-colors, $color), border-color);
        box-shadow: none;
        color: map-get(map-get($button-colors, $color), text-color-outline);

        .chi-spinner__icon {
          .path {
            stroke: map-get(map-get($button-colors, $color), text-color-outline);
          }
        }

        &:hover,
        &.-hover {
          border: $border solid map-get(map-get($button-colors, $color), border-color-hover);
          color: map-get(map-get($button-colors, $color), text-color-outline-hover);
        }

        &:active,
        &.-active {
          border: $border solid map-get(map-get($button-colors, $color), border-color-active);
          color: map-get(map-get($button-colors, $color), text-color-outline-active);
        }

        &[disabled],
        &.-disabled {
          @include button-disabled;
        }
      }

      &.-flat {
        background-color: transparent;
        border: $border solid transparent;
        box-shadow: none;
        color: map-get(map-get($button-colors, $color), text-color-outline);

        &:not(.-no-hover) {
          &:hover,
          &.-hover {
            border: $border solid map-get(map-get($button-colors, $color), border-color);
          }

          &:active,
          &.-active {
            background-color: transparent;
            border: $border solid map-get(map-get($button-colors, $color), border-color);
            box-shadow: none;
          }
        }

        &[disabled],
        &.-disabled {
          background-color: transparent;
          border-color: transparent;
          opacity: $opacity-60;

          & .chi-icon {
            color: inherit;
            opacity: $opacity-60;
          }
        }
      }

      &.-float {
        box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.24),
        0 6px 10px 0 rgba(0, 0, 0, 0.14),
        0 1px 16px 0 rgba(0, 0, 0, 0.12);

        &:active,
        &.-active {
          box-shadow: 0 4px 4px -2px rgba(0, 0, 0, 0.2),
          0 8px 10px 1px rgba(0, 0, 0, 0.14),
          0 2px 14px 1px rgba(0, 0, 0, 0.12);
        }

        &[disabled],
        &.-disabled {
          @include button-disabled;
        }
      }
    }
  }
}
