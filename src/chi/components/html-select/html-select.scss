@import '_variables';
@import '_mixins';

$sizes: (
  sm: (
    height: 1.5rem,
    font-size: 0.75rem,
    line-height: 1rem,
    background-position: right 0.5rem center,
    padding-left: 0.75rem,
  ),
  small: (
    height: 1.5rem,
    font-size: 0.75rem,
    line-height: 1rem,
    background-position: right 0.5rem center,
    padding-left: 0.75rem,
  ),
  md: (
    height: 2rem,
    font-size: 0.875rem,
    line-height: 1rem,
    background-position: right 0.5rem center,
    padding-left: 0.75rem,
  ),
  lg: (
    height: 2.5rem,
    font-size: 0.875rem,
    line-height: 1.25rem,
    background-position: right 1rem center,
    padding-left: 0.75rem,
  ),
  large: (
    height: 2.5rem,
    font-size: 0.875rem,
    line-height: 1.25rem,
    background-position: right 1rem center,
    padding-left: 0.75rem,
  ),
  xl: (
    height: 3rem,
    font-size: 0.875rem,
    line-height: 1.25rem,
    background-position: right 1rem center,
    padding-left: 0.75rem,
  )
);

select {
  &.a-input {
    appearance: none;
    background-color: set-color(white);
    background-image: url('icon-chevron-thin-down.svg');
    background-position: map-get(map-get($sizes, md), background-position);
    background-repeat: no-repeat;
    background-size: 0.75rem 0.75rem;
    border: 0.0625rem solid set-color(grey, 30);
    border-radius: $border-radius;
    color: set-color(grey, 90);
    cursor: hand;
    cursor: pointer; // sass-lint:disable-line no-duplicate-properties
    font-size: map-get(map-get($sizes, md), font-size);
    height: map-get(map-get($sizes, md), height);
    line-height: map-get(map-get($sizes, md), line-height);
    outline: none;
    padding-left: map-get(map-get($sizes, md), padding-left);
    padding-right: 1.6875rem;
    width: 100%;

    // sass-lint:disable no-vendor-prefixes
    &::-ms-expand {
      display: none;
    }

    &::-moz-focus-outer,
    &::-moz-focus-inner {
      border: 0;
    }
    // sass-lint:enable no-vendor-prefixes

    &:hover,
    &.-hover {
      border-color: set-color(grey, 40);
      box-shadow: 0 1px 4px 0 rgba(set-color(black), 0.15);
    }

    &:active,
    &.-active {
      background-color: set-color(grey, 20);
      border-color: set-color(grey, 40);
      box-shadow: inset 0 2px 2px 0 rgba(set-color(black), 0.1);
    }

    &:focus,
    &.-focus {
      border-color: $focus-color;
      box-shadow: 0 0 0 1px rgba($focus-color, 1);
    }

    &[disabled] {
      opacity: 0.6;
      pointer-events: none;
    }

    @each $type in map-keys($sizes) {
      &.-#{$type} {
        background-position: map-get(map-get($sizes, $type), background-position);
        font-size: map-get(map-get($sizes, $type), font-size);
        height: map-get(map-get($sizes, $type), height);
        line-height: map-get(map-get($sizes, $type), line-height);
        padding-left: map-get(map-get($sizes, $type), padding-left);
      }
    }

    &:not([disabled]) {
      &.-danger {
        border-color: set-color(red, 60);
      }
    }

    &.-danger {
      color: set-color(grey, 90);

      &:focus,
      &.-focus {
        box-shadow: 0 0 0 1px rgba(set-color(red, 60), 1);
      }
    }
  }
}
