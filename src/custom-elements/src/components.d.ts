/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';




export namespace Components {

  interface ChiIcon {
    /**
    * OPTIONAL. Color of the icon. Accepts any color the text-utility supports {primary, success, warning, danger, inverse, muted}
    */
    'color': string;
    /**
    * Icon to be rendered. View accepted values on text documentation.
    */
    'icon': string;
    /**
    * OPTIONAL. Size of the Icon. {xs, sm, sm--2, sm--3, md, lg, xl, xxl}
    */
    'size': string;
  }
  interface ChiIconAttributes extends StencilHTMLAttributes {
    /**
    * OPTIONAL. Color of the icon. Accepts any color the text-utility supports {primary, success, warning, danger, inverse, muted}
    */
    'color'?: string;
    /**
    * Icon to be rendered. View accepted values on text documentation.
    */
    'icon'?: string;
    /**
    * OPTIONAL. Size of the Icon. {xs, sm, sm--2, sm--3, md, lg, xl, xxl}
    */
    'size'?: string;
  }

  interface ChiSpinner {
    /**
    * to set color of a spinner { primary, success, warning, danger, muted }.
    */
    'color': string;
    /**
    * to set size of a spinner { xs, sm, sm--2, sm--3, md, lg, xl, xxl }.
    */
    'size': string;
  }
  interface ChiSpinnerAttributes extends StencilHTMLAttributes {
    /**
    * to set color of a spinner { primary, success, warning, danger, muted }.
    */
    'color'?: string;
    /**
    * to set size of a spinner { xs, sm, sm--2, sm--3, md, lg, xl, xxl }.
    */
    'size'?: string;
  }
}

declare global {
  interface StencilElementInterfaces {
    'ChiIcon': Components.ChiIcon;
    'ChiSpinner': Components.ChiSpinner;
  }

  interface StencilIntrinsicElements {
    'chi-icon': Components.ChiIconAttributes;
    'chi-spinner': Components.ChiSpinnerAttributes;
  }


  interface HTMLChiIconElement extends Components.ChiIcon, HTMLStencilElement {}
  var HTMLChiIconElement: {
    prototype: HTMLChiIconElement;
    new (): HTMLChiIconElement;
  };

  interface HTMLChiSpinnerElement extends Components.ChiSpinner, HTMLStencilElement {}
  var HTMLChiSpinnerElement: {
    prototype: HTMLChiSpinnerElement;
    new (): HTMLChiSpinnerElement;
  };

  interface HTMLElementTagNameMap {
    'chi-icon': HTMLChiIconElement
    'chi-spinner': HTMLChiSpinnerElement
  }

  interface ElementTagNameMap {
    'chi-icon': HTMLChiIconElement;
    'chi-spinner': HTMLChiSpinnerElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
