---
title: Number input
---
p.-text
  | Number inputs are used to increase or decrease numeric values, and they require JavaScript to increment and
  | decrement the value when the buttons are pressed. This piece of JavaScripts makes the number increase and decrease
  | when the buttons are pressed and enables and disables the buttons when the number exceeds the min and max limits.

h3 Default
p.-text
  | Call the function chi.numberInput and pass the input element as parameter.
.example.-mb--3
  .-p--3
    .m-form__wrapper
      .m-input__wrapper
        input#input-number-1.a-input(type="number", value="0")
        button
        button
  :code(lang="html")
    <div class="m-input__wrapper">
      <input id="input-number-1" type="number" class="a-input" value="0">
      <button></button>
      <button></button>
    </div>

    <script>chi.numberInput(document.getElementById('input-number-1'));</script>

h3 Expanded version
.example.-mb--3
  .-p--3
    .m-inputNumber
      input#input-number-2.a-input(type="number", value="0", min="0", max="3")
      button.a-btn.-icon
        .a-btn__content
          i.a-icon.icon-minus
      button.a-btn.-icon
        .a-btn__content
          i.a-icon.icon-plus
  :code(lang="html")
    <div class="m-inputNumber">
      <input id="input-number-2" class="a-input" type="number" value="0" min="0" max="3">
      <button class="a-btn -icon">
        <div class="a-btn__content">
          <i class="a-icon icon-minus"></i>
        </div>
      </button>
      <button class="a-btn -icon">
        <div class="a-btn__content">
          <i class="a-icon icon-plus"></i>
        </div>
      </button>
    </div>

    <script>chi.numberInput(document.getElementById('input-number-2'));</script>

h3 Options
p.-text This component accepts options to configure its behavior.

section.a-table.a-table__options.-bordered.-my--3
  div
    table.-text(cellpadding='0', cellspacing='0')
      thead
        tr
          th(style='width: 10em')
            div Option
          th(style='width: 10em')
            div Default
          th
            div Description
      tbody
        tr
          td
            div
              code= 'autofix'
          td
            div
              code= 'false'
          td
            div
              | Fixes automatically values that are out of range of defined by <code>max</code> and <code>min</code>
              | attributes, and any value that doesn't fit the granularity defined by <code>step</code> and the
              | <code>initial</code> value

h4 Example <code>autofix=true</code>
p.-text
  | This example only accepts values between <code>0</code> and <code>6</code>, and as the <code>step</code> is
  | <code>2</code> and initial <code>value</code> is <code>1</code>, only even values are valid. If you manually write
  | any pair value, or a value greater than 5 or lesser than 1, the component will automatically correct the value.
.example.-mb--3
  .-p--3
    .m-inputNumber
      input#input-number-3.a-input(type="number", value="1", min="0", max="6", step="2")
      button.a-btn.-icon
        .a-btn__content
          i.a-icon.icon-minus
      button.a-btn.-icon
        .a-btn__content
          i.a-icon.icon-plus
  :code(lang="html")
    <div class="m-inputNumber">
      <input id="input-number-3" class="a-input" type="number" value="1" min="0" max="6" step="2">
      <button class="a-btn -icon">
        <div class="a-btn__content">
          <i class="a-icon icon-minus"></i>
        </div>
      </button>
      <button class="a-btn -icon">
        <div class="a-btn__content">
          <i class="a-icon icon-plus"></i>
        </div>
      </button>
    </div>
    <script>
      chi.numberInput(
        document.getElementById('input-number-2'),
        {autofix: true}
      );
    </script>

h4 Preventing memory leaks
p.-text
  | Input number components have a dispose function to free all resources attached to the element, such as event
  | listeners and object data. You should call this method when you want to remove the component.
:code(lang="javascript")
  var elem = document.getElementById('input-number-1');
  var inputNumberComponent = chi.numberInput(elem);
  // do stuff
  inputNumberComponent.dispose();

p.-text
  span.a-badge.-primary.-mr1
    span Tip
  | It is safe to call the <code>numberInput</code> method more than once, as it will return any previously created
  | number input component associated to the input.
:code(lang="javascript")
  var elem = document.getElementById('input-number-1');
  var inputNumberComponent = chi.numberInput(elem);
  var elem2 = document.getElementById('input-number-1');
  var inputNumberComponent2 = chi.numberInput(elem2);
  inputNumberComponent === inputNumberComponent2; // returns true

  inputNumberComponent.dispose(); // Only have to do it once.

script.
  document.addEventListener(
    'DOMContentLoaded',
    function() {
      chi.numberInput(document.getElementById('input-number-1'));
      chi.numberInput(document.getElementById('input-number-2'));
      chi.numberInput(
        document.getElementById('input-number-3'),
        {autofix:true}
      );
    }
  );
