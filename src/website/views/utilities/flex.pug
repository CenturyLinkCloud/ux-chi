---
title: Flex
---

p.-text Use shorthand flex utility classes to manage the layout, alignment, and size of Chi components.

h3 Display
p.-text To enable flex, apply a flex display utility class. This will transform
  |  your element into a flexbox container and its direct children into flex items.
h4 Flexbox container
.example.-mb3
  .-p3
    .-text.-p2.-m1.-b1.-d--flex(style="background:#E4F2CE;border-color:#C6DBA7;") -d--flex
  :code(lang="html")
    <div class="-d--flex"></div>
h4 Inline Flexbox container
.example.-mb3
  .-p3
    .-text.-p2.-m1.-b1.-d--inline-flex(style="background:#E4F2CE;border-color:#C6DBA7;") -d--inline-flex
  :code(lang="html")
    <div class="-d--inline-flex"></div>

p.-text Target specific breakpoints with Display reponsive classes.
ul.-mb3
  li
    code .-d--flex
  li
    code .-d--inline-flex
  each type in ['xs', 'sm', 'md', 'lg', 'xl']
    li
      code= '.-d-' + type + '--flex'
    li
      code= '.-d-' + type + '--inline-flex'

h3 Direction
p.-text Use direction utilities to define how items will be placed in flex containers.
h4 Row (default)
p.-text Use <code>.-flex--row</code> to display items horizontally. In most cases this class
  |  can be omitted as it is the browsers default behavior.
.example.-mb3
  .-p3.-d--flex.-flex--row
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -flex--row">
      <div>Item 1</div>
      <div>Item 2</div>
      <div>Item 3</div>
    </div>
h4 Row reverse
p.-text Use <code>.-flex--row-reverse</code> to display the items horizontally in reverse.
.example.-mb3
  .-p3.-d--flex.-flex--row-reverse
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -flex--row-reverse">
      <div>Item 1</div>
      <div>Item 2</div>
      <div>Item 3</div>
    </div>
h4 Column
p.-text Use <code>.-flex--column</code> to display items vertically.
.example.-mb3
  .-p3.-d--flex.-flex--column
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -flex--column">
      <div>Item 1</div>
      <div>Item 2</div>
      <div>Item 3</div>
    </div>
h4 Column reverse
p.-text Use <code>.-flex--column-reverse</code> to display the items vertically in reverse.
.example.-mb3
  .-p3.-d--flex.-flex--column-reverse
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
    .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -flex--column-reverse">
      <div>Item 1</div>
      <div>Item 2</div>
      <div>Item 3</div>
    </div>
p.-text Target specific breakpoints with Direction reponsive classes.
ul.-mb3
  li
    code .-flex--row
  li
    code .-flex--row-reverse
  li
    code .-flex--column
  li
    code .-flex--column-reverse
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['row', 'row-reverse', 'column', 'column-reverse']
      li
        code= '.-flex-' + size + '--' + type

h3 Justify content
p.-text Use justify-content utilities to alter the alignment of flex items on the main axis.
.example.-mb3
  .-p3.-pb1
    each type in ['start', 'end', 'center', 'between', 'around']
      .-mb2.-d--flex(style="background:#F2FAE6;", class='-justify-content--' + type)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -justify-content--start"></div>
    <div class="-d--flex -justify-content--end"></div>
    <div class="-d--flex -justify-content--center"></div>
    <div class="-d--flex -justify-content--between"></div>
    <div class="-d--flex -justify-content--around"></div>
p.-text Target specific breakpoints with Justify content reponsive classes.
ul.-mb3
  each type in ['start', 'end', 'center', 'between', 'around']
    li
      code= '.-justify-content--' + type
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['start', 'end', 'center', 'between', 'around']
      li
        code= '.-justify-content-' + size + '--' + type

h3 Align items
p.-text Use align-items utilities to alter the alignment of flex items on the cross axis.
.example.-mb3
  .-p3.-pb1
    each type in ['start', 'end', 'center', 'baseline', 'stretch']
      .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;", class='-align-items--' + type)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 1
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 2
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item 3
  :code(lang="html")
    <div class="-d--flex -align-items--start"></div>
    <div class="-d--flex -align-items--end"></div>
    <div class="-d--flex -align-items--center"></div>
    <div class="-d--flex -align-items--baseline"></div>
    <div class="-d--flex -align-items--stretch"></div>
p.-text Target specific breakpoints with Align items reponsive classes.
ul.-mb3
  each type in ['start', 'end', 'center', 'baseline', 'stretch']
    li
      code= '.-align-items--' + type
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['start', 'end', 'center', 'baseline', 'stretch']
      li
        code= '.-align-items-' + size + '--' + type

h3 Align self
p.-text Use align-self utilities to alter the alignment of individual flex items on the cross axis.

h4 Start
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1.-align-self--start(style="background:#E4F2CE;border-color:#C6DBA7;") Aligned Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div>Item</div>
      <div class="-align-self--start">Aligned Item</div>
      <div>Item</div>
    </div>
h4 End
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1.-align-self--end(style="background:#E4F2CE;border-color:#C6DBA7;") Aligned Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div>Item</div>
      <div class="-align-self--end">Aligned Item</div>
      <div>Item</div>
    </div>
h4 Center
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1.-align-self--center(style="background:#E4F2CE;border-color:#C6DBA7;") Aligned Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div>Item</div>
      <div class="-align-self--center">Aligned Item</div>
      <div>Item</div>
    </div>
h4 Baseline
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1.-align-self--baseline(style="background:#E4F2CE;border-color:#C6DBA7;") Aligned Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div>Item</div>
      <div class="-align-self--baseline">Aligned Item</div>
      <div>Item</div>
    </div>
h4 Stretch (Browser default)
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;height:7rem;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1.-align-self--stretch(style="background:#E4F2CE;border-color:#C6DBA7;") Aligned Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div>Item</div>
      <div class="-align-self--stretch">Aligned Item</div>
      <div>Item</div>
    </div>
p.-text Target specific breakpoints with Align self reponsive classes.
ul.-mb3
  each type in ['start', 'end', 'center', 'baseline', 'stretch']
    li
      code= '.-align-self--' + type
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['start', 'end', 'center', 'baseline', 'stretch']
      li
        code= '.-align-self-' + size + '--' + type

h3 Wrap
p.-text Use wrap utilities to define how flex items wrap in a flex container.
h4 No Wrap (default)
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-flex--nowrap.-align-items--start(style="background:#F2FAE6;height:116px;width:224px;")
      each item in new Array(4)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-items--start -flex--nowrap" style="height:116px;width:224px;">
      <div>Item</div>
    </div>
h4 Wrap
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-flex--wrap.-align-items--start(style="background:#F2FAE6;height:116px;width:224px;")
      each item in new Array(4)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-items--start -flex--wrap" style="height:116px;width:224px;">
      <div>Item</div>
    </div>
h4 Wrap Reverse
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-flex--wrap-reverse.-align-items--start(style="background:#F2FAE6;height:116px;width:224px;")
      each item in new Array(4)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-items--start -flex--wrap-reverse" style="height:116px;width:224px;">
      <div>Item</div>
    </div>
p.-text Target specific breakpoints with Wrap reponsive classes.
ul.-mb3
  each type in ['nowrap', 'wrap', 'wrap-reverse']
    li
      code= '.-flex--' + type
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['nowrap', 'wrap', 'wrap-reverse']
      li
        code= '.-flex-' + size + '--' + type

h3 Align content
p.-text Use align-content utilities on flexbox containers to alter the alignment of flex items <strong>together</strong> on the cross axis.
h4 Start (default)
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--start.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--start -flex--wrap">
      <div>Item</div>
    </div>
h4 End
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--end.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--end -flex--wrap">
      <div>Item</div>
    </div>
h4 Center
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--center.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--center -flex--wrap">
      <div>Item</div>
    </div>
h4 Around
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--around.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--around -flex--wrap">
      <div>Item</div>
    </div>
h4 Between
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--between.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--between -flex--wrap">
      <div>Item</div>
    </div>
h4 Stretch
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex.-align-content--stretch.-flex--wrap(style="background:#F2FAE6;height:12rem;")
      each item in new Array(20)
        .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex -align-content--stretch -flex--wrap">
      <div>Item</div>
    </div>

p.-text Target specific breakpoints with Align content reponsive classes.
ul.-mb3
  each type in ['start', 'end', 'center', 'around', 'between', 'stretch']
    li
      code= '.-align-content--' + type
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    each type in ['start', 'end', 'center', 'around', 'between', 'stretch']
      li
        code= '.-align-content-' + size + '--' + type

h3 Fill
p.-text Use the <code>.-flex--fill</code> class on flexbox items to display as equal widths while taking up all available horizontal space.
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;")
      each item in new Array(3)
        .-text.-p2.-b1.-flex--fill(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div class="-flex--fill">Item</div>
      <div class="-flex--fill">Item</div>
      <div class="-flex--fill">Item</div>
    </div>
p.-text Target specific breakpoints with Fill reponsive classes.
ul.-mb3
  li
    code .-flex--fill
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    li
      code= '.-flex-' + size + '--fill'

h3 Grow
p.-text Use the <code>.-flex--grow*</code> class to toggle a flex item's ability to grow and take up all available space.
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;")
      .-text.-p2.-b1.-flex--grow1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;") Item
  :code(lang="html")
    <div class="-d--flex">
      <div class="-flex--grow1">Item</div>
      <div>Item</div>
      <div>Item</div>
    </div>
p.-text Target specific breakpoints with Fill reponsive classes.
ul.-mb3
  li
    code .-flex--grow0
  li
    code .-flex--grow1
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    li
      code= '.-flex-' + size + '--grow0'
    li
      code= '.-flex-' + size + '--grow1'
h3 Shrink
p.-text Use the <code>.-flex--shrink*</code> class to toggle a flex item's ability to shrink when its size is larger than its container.
.example.-mb3
  .-p3.-pb1
    .-mb2.-d--flex(style="background:#F2FAE6;")
      .-text.-p2.-b1(style="background:#E4F2CE;border-color:#C6DBA7;width:100%;") Item
      .-text.-p2.-b1.-flex--shrink1(style="background:#E4F2CE;border-color:#C6DBA7;") Shrink Item
  :code(lang="html")
    <div class="-d--flex">
      <div style="width:100%;">Item</div>
      <div class="-flex--shrink1">Shrink Item</div>
    </div>
p.-text Target specific breakpoints with Shrink reponsive classes.
ul.-mb3
  li
    code .-flex--shrink0
  li
    code .-flex--shrink1
  each size in ['xs', 'sm', 'md', 'lg', 'xl']
    li
      code= '.-flex-' + size + '--shrink0'
    li
      code= '.-flex-' + size + '--shrink1'
